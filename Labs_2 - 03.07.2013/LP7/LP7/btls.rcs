                         Прогр BottleFillingSystem_SIMPLIFIED

/* Демонстрационная программа управления эталоннным процессом
   Автоматизированная линия розлива 
   (упрощенный вариант - управление только соплом и одним конвейером)

   ДАТА СОЗДАНИЯ:                28.03.2008
   ДАТЫ КОРРЕКЦИИ:               -
*/

{

 ТАКТ     10;    /* период активизации равен 100 миллисекундам */

/*###########################################################*/
/*#########                     #############################*/
/*#########  ОПИСАНИЕ КОНСТАНТ  #############################*/
/*#########                     #############################*/
/*###########################################################*/

 КОНСТ ВКЛ                1;
 КОНСТ ВЫКЛ               0;

/*###########################################################*/
/*########                                          #########*/
/*########  ОПИСАНИЕ РЕГИСТРОВ МОДУЛЕЙ УСО          #########*/
/*########                                          #########*/
/*###########################################################*/

ВХОД  ЛОГ_ВХОДЫ1  0 0 8; /* имя, базовый адрес, № Регистра, 8бит */
ВХОД  ЛОГ_ВХОДЫ2  1 0 8; /* имя, базовый адрес, № Регистра, 8бит */
ВЫХОД ЛОГ_ВЫХОДЫ1 0 0 8;
ВЫХОД ЛОГ_ВЫХОДЫ2 1 0 8;

/*###########################################################*/
/*########                                          #########*/
/*########  ПРОЦЕССЫ                                #########*/
/*########                                          #########*/
/*###########################################################*/

/*
 * Процесс Инициализация. Служит для
 * развертывания программы. Этот процесс (описанный
 * первым) - единственно активный процесс по запуску.
 * Кроме этого, процесс Инициализация содержит описание 
 * переменных для ссылок из других
 * процессов. Это удобно: описания локализованы в одном
 * месте.
*/

ПРОЦ Инициализация{

/*===========================================================*/
/*=========== ОПИСАНИЕ ПЕРЕМЕННЫХ ===========================*/
/*===========================================================*/

/* ВХОДНЫЕ СИГНАЛЫ: 
тип, имя,                 модуль УСО, 1 бит, "видимость" из др. процессов */ 
 ЛОГ К_БУТЫЛКА_ПОД_СОПЛОМ    = {ЛОГ_ВХОДЫ1[1]} ДЛЯ ВСЕХ;
 ЛОГ К_БУТЫЛКА_НАПОЛНЕНА     = {ЛОГ_ВХОДЫ2[1]} ДЛЯ ВСЕХ;

/* ВЫХОДНЫЕ СИГНАЛЫ (т.к. привязаны к модулю выходов): */ 
 ЛОГ У_ЗАПОЛНЕНИЕ_БУТЫЛКИ = {ЛОГ_ВЫХОДЫ1[1]} ДЛЯ ВСЕХ;
 ЛОГ У_ВКЛ_КОНВЕЙЕРА      = {ЛОГ_ВЫХОДЫ2[1]} ДЛЯ ВСЕХ;

/*########  СОСТОЯНИЯ ПРОЦЕССА  #########*/
 СОСТ Начало{  /* именно отсюда все и начинается после включения питания */
  У_ЗАПОЛНЕНИЕ_БУТЫЛКИ = ВЫКЛ; /* выключаем все */
  У_ВКЛ_КОНВЕЙЕРА    = ВЫКЛ;
  СТАРТ ПРОЦ РозливБутылок;    /* запускаем процессы */
  СТАРТ ПРОЦ ПодачаБутылок;
  СТОП;                        /* останов */  
 }
}


ПРОЦ РозливБутылок{
ИЗ ПРОЦ Инициализация К_БУТЫЛКА_ПОД_СОПЛОМ,
                      К_БУТЫЛКА_НАПОЛНЕНА, 
                      У_ЗАПОЛНЕНИЕ_БУТЫЛКИ; 

 СОСТ Начало{
   ЕСЛИ (К_БУТЫЛКА_ПОД_СОПЛОМ && !К_БУТЫЛКА_НАПОЛНЕНА) 
       У_ЗАПОЛНЕНИЕ_БУТЫЛКИ = ВКЛ;
   ИНАЧЕ 
       У_ЗАПОЛНЕНИЕ_БУТЫЛКИ = ВЫКЛ;
   ЗАЦИКЛИТЬ; /* снимем контроль ошибки по отсутствию перехода из */
 }
}

ПРОЦ ПодачаБутылок{ 
ИЗ ПРОЦ Инициализация К_БУТЫЛКА_ПОД_СОПЛОМ,
                      К_БУТЫЛКА_НАПОЛНЕНА,
                      У_ВКЛ_КОНВЕЙЕРА; 

 СОСТ Начало{
   ЕСЛИ (К_БУТЫЛКА_НАПОЛНЕНА || !К_БУТЫЛКА_ПОД_СОПЛОМ) /* тут небольшой философский вопрос: */
       У_ВКЛ_КОНВЕЙЕРА = ВКЛ; /*  может ли быть бутылка наполнена, но не на месте? */
   ИНАЧЕ 
       У_ВКЛ_КОНВЕЙЕРА = ВЫКЛ;
   ЗАЦИКЛИТЬ;
 }
}
}