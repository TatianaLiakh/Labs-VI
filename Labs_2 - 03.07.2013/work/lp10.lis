    1                                   Прогр BoxSortingSystem {
    2          /* Демонстрационная программа управления эталонным процессом
    3             Линия сортировки ящиков
    4             (упрощенный вариант - управление только удалением и основным конвейером)
    5          
    6             ДАТА СОЗДАНИЯ:              01.07.2010  
    7             ДАТЫ КОРРЕКЦИИ:              
    8          */
    9          
   10          
   11          
   12           ТАКТ     10;    /* период активизации равен 100 миллисекундам */
   13          
   14          /*###########################################################*/
   15          /*#########                     #############################*/
   16          /*#########  ОПИСАНИЕ КОНСТАНТ  #############################*/
   17          /*#########                     #############################*/
   18          /*###########################################################*/
   19          
   20           КОНСТ ВКЛ                1;
   21           КОНСТ ВЫКЛ               0;
   22          
   23          /*###########################################################*/
   24          /*########                                          #########*/
   25          /*########  ОПИСАНИЕ РЕГИСТРОВ МОДУЛЕЙ УСО          #########*/
   26          /*########                                          #########*/
   27          /*###########################################################*/
   28                                  
   29          ВХОД  ЛОГ_ВХОДЫ1  0 0 8; /* имя, базовый адрес, ь Регистра, 8бит */
   30          ВЫХОД ЛОГ_ВЫХОДЫ1 0 0 8;
   31          
   32          /*###########################################################*/
   33          /*########                                          #########*/
   34          /*########  ПРОЦЕССЫ                                #########*/
   35          /*########                                          #########*/
   36          /*###########################################################*/
   37          
   38          /*
   39           * Процесс Инициализация. Служит для
   40           * развертывания программы. Этот процесс (описанный
   41           * первым) - единственно активный процесс по запуску.
   42           * Кроме этого, процесс Инициализация содержит описание 
   43           * переменных для ссылок из других
   44           * процессов. Это удобно: описания локализованы в одном
   45           * месте.
   46          */
   47          
   48          ПРОЦ Инициализация{
   49          
   50          /*===========================================================*/
   51          /*=========== ОПИСАНИЕ ПЕРЕМЕННЫХ ===========================*/
   52          /*===========================================================*/
   53          
   54          /* ВХОДНЫЕ СИГНАЛЫ: 
   55          тип, имя,                 модуль УСО, 1 бит, "видимость" из др. процессов */ 
   56           ЛОГ К_ЯЩИК_ПОД_ДАТЧИКОМ  = {ЛОГ_ВХОДЫ1[1]} ДЛЯ ВСЕХ;
   57           ЛОГ К_ЯЩИК_КРАСНЫЙ       = {ЛОГ_ВХОДЫ1[1]} ДЛЯ ВСЕХ;
   58           ЛОГ К_ЯЩИК_ЗЕЛЕНЫЙ       = {ЛОГ_ВХОДЫ1[1]} ДЛЯ ВСЕХ;
   59                                   
   60          /* ВЫХОДНЫЕ СИГНАЛЫ (т.к. привязаны к модулю выходов): */ 
   61           ЛОГ У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = {ЛОГ_ВЫХОДЫ1[1]} ДЛЯ ВСЕХ;
   62           ЛОГ У_ВКЛ_КОНВЕЙЕР_2        = {ЛОГ_ВЫХОДЫ1[1]} ДЛЯ ВСЕХ;
   63           ЛОГ У_УБРАТЬ_ЯЩИК           = {ЛОГ_ВЫХОДЫ1[1]} ДЛЯ ВСЕХ;
   64                             
   65          /*########  СОСТОЯНИЯ ПРОЦЕССА  #########*/
   66           СОСТ Начало{  /* именно отсюда все и начинается после включения питания */
   67            У_УБРАТЬ_ЯЩИК           = ВЫКЛ; /* выключаем все */
   68            У_ВКЛ_КОНВЕЙЕР_2        = ВЫКЛ;
   69            У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВКЛ;
   70            СТАРТ ПРОЦ СортировкаЯщиков;    /* запускаем процессы */
   71            СТАРТ ПРОЦ ПодачаЯщиков; 
   72            СТОП;                        /* останов */  
   73           }
   74          }
   75          
   76          ПРОЦ СортировкаЯщиков {
   77          ИЗ ПРОЦ Инициализация  
   78          			 К_ЯЩИК_ПОД_ДАТЧИКОМ,
   79          			 К_ЯЩИК_КРАСНЫЙ,
   80          			 К_ЯЩИК_ЗЕЛЕНЫЙ,
   81          			 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ,
   82          			 У_ВКЛ_КОНВЕЙЕР_2,
   83          			 У_УБРАТЬ_ЯЩИК;                            
   84           СОСТ Начало{
   85             ЕСЛИ (К_ЯЩИК_ПОД_ДАТЧИКОМ && !К_ЯЩИК_КРАСНЫЙ&& !К_ЯЩИК_ЗЕЛЕНЫЙ) { 
   86                 У_УБРАТЬ_ЯЩИК           = ВКЛ;
   87                 У_ВКЛ_КОНВЕЙЕР_2        = ВЫКЛ;
   88          	 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВЫКЛ;
   89             } ИНАЧЕ {
   90                 У_УБРАТЬ_ЯЩИК    = ВЫКЛ;
   91             }
   92             ЕСЛИ (К_ЯЩИК_ПОД_ДАТЧИКОМ && К_ЯЩИК_КРАСНЫЙ) {
   93          	 У_УБРАТЬ_ЯЩИК           = ВЫКЛ;
   94                 У_ВКЛ_КОНВЕЙЕР_2        = ВЫКЛ;
   95           	 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВКЛ;
   96             }
   97             ЕСЛИ (К_ЯЩИК_ПОД_ДАТЧИКОМ && К_ЯЩИК_ЗЕЛЕНЫЙ) {
   98          	 У_УБРАТЬ_ЯЩИК           = ВЫКЛ;
   99                 У_ВКЛ_КОНВЕЙЕР_2        = ВКЛ;
  100           	 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВКЛ;
  101             }
  102          
  103             ЗАЦИКЛИТЬ; /* снимем контроль ошибки по отсутствию перехода из */           
  104           }
  105          }
  106          
  107          ПРОЦ ПодачаЯщиков {
  108          ИЗ ПРОЦ Инициализация  
  109          			 К_ЯЩИК_ПОД_ДАТЧИКОМ,
  110          			 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ;
  111          				                             
  112           СОСТ Начало{
  113             ЕСЛИ (!К_ЯЩИК_ПОД_ДАТЧИКОМ) { 
  114                 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВКЛ;       
  115             } 
  116             ЗАЦИКЛИТЬ; /* снимем контроль ошибки по отсутствию перехода из */        
  117           }
  118          }
  119          }

%RCSL-I-SUMMARY, Completed with 0 error(s).
%RCSL-I-SUMMARY, Completed with 0 warning(s).

 %RCSL-I-SUMMARY, Completed with 0 error(s).