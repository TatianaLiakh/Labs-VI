                         Прогр BoxSortingSystem {
/* Демонстрационная программа управления эталонным процессом
   Линия сортировки ящиков
   (упрощенный вариант - управление только удалением и основным конвейером)

   ДАТА СОЗДАНИЯ:              01.07.2010  
   ДАТЫ КОРРЕКЦИИ:              
*/



 ТАКТ     10;    /* период активизации равен 100 миллисекундам */

/*###########################################################*/
/*#########                     #############################*/
/*#########  ОПИСАНИЕ КОНСТАНТ  #############################*/
/*#########                     #############################*/
/*###########################################################*/

 КОНСТ ВКЛ                1;
 КОНСТ ВЫКЛ               0;

/*###########################################################*/
/*########                                          #########*/
/*########  ОПИСАНИЕ РЕГИСТРОВ МОДУЛЕЙ УСО          #########*/
/*########                                          #########*/
/*###########################################################*/
                        
ВХОД  ЛОГ_ВХОДЫ1  0 0 8; /* имя, базовый адрес, ь Регистра, 8бит */
ВЫХОД ЛОГ_ВЫХОДЫ1 0 0 8;

/*###########################################################*/
/*########                                          #########*/
/*########  ПРОЦЕССЫ                                #########*/
/*########                                          #########*/
/*###########################################################*/

/*
 * Процесс Инициализация. Служит для
 * развертывания программы. Этот процесс (описанный
 * первым) - единственно активный процесс по запуску.
 * Кроме этого, процесс Инициализация содержит описание 
 * переменных для ссылок из других
 * процессов. Это удобно: описания локализованы в одном
 * месте.
*/

ПРОЦ Инициализация{

/*===========================================================*/
/*=========== ОПИСАНИЕ ПЕРЕМЕННЫХ ===========================*/
/*===========================================================*/

/* ВХОДНЫЕ СИГНАЛЫ: 
тип, имя,                 модуль УСО, 1 бит, "видимость" из др. процессов */ 
 ЛОГ К_ЯЩИК_ПОД_ДАТЧИКОМ  = {ЛОГ_ВХОДЫ1[1]} ДЛЯ ВСЕХ;
 ЛОГ К_ЯЩИК_КРАСНЫЙ       = {ЛОГ_ВХОДЫ1[1]} ДЛЯ ВСЕХ;
 ЛОГ К_ЯЩИК_ЗЕЛЕНЫЙ       = {ЛОГ_ВХОДЫ1[1]} ДЛЯ ВСЕХ;
                         
/* ВЫХОДНЫЕ СИГНАЛЫ (т.к. привязаны к модулю выходов): */ 
 ЛОГ У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = {ЛОГ_ВЫХОДЫ1[1]} ДЛЯ ВСЕХ;
 ЛОГ У_ВКЛ_КОНВЕЙЕР_2        = {ЛОГ_ВЫХОДЫ1[1]} ДЛЯ ВСЕХ;
 ЛОГ У_УБРАТЬ_ЯЩИК           = {ЛОГ_ВЫХОДЫ1[1]} ДЛЯ ВСЕХ;
                   
/*########  СОСТОЯНИЯ ПРОЦЕССА  #########*/
 СОСТ Начало{  /* именно отсюда все и начинается после включения питания */
  У_УБРАТЬ_ЯЩИК           = ВЫКЛ; /* выключаем все */
  У_ВКЛ_КОНВЕЙЕР_2        = ВЫКЛ;
  У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВКЛ;
  СТАРТ ПРОЦ СортировкаЯщиков;    /* запускаем процессы */
  СТАРТ ПРОЦ ПодачаЯщиков; 
  СТОП;                        /* останов */  
 }
}

ПРОЦ СортировкаЯщиков {
ИЗ ПРОЦ Инициализация  
			 К_ЯЩИК_ПОД_ДАТЧИКОМ,
			 К_ЯЩИК_КРАСНЫЙ,
			 К_ЯЩИК_ЗЕЛЕНЫЙ,
			 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ,
			 У_ВКЛ_КОНВЕЙЕР_2,
			 У_УБРАТЬ_ЯЩИК;                            
 СОСТ Начало{
   ЕСЛИ (К_ЯЩИК_ПОД_ДАТЧИКОМ && !К_ЯЩИК_КРАСНЫЙ&& !К_ЯЩИК_ЗЕЛЕНЫЙ) { 
       У_УБРАТЬ_ЯЩИК           = ВКЛ;
       У_ВКЛ_КОНВЕЙЕР_2        = ВЫКЛ;
	 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВЫКЛ;
   } ИНАЧЕ {
       У_УБРАТЬ_ЯЩИК    = ВЫКЛ;
   }
   ЕСЛИ (К_ЯЩИК_ПОД_ДАТЧИКОМ && К_ЯЩИК_КРАСНЫЙ) {
	 У_УБРАТЬ_ЯЩИК           = ВЫКЛ;
       У_ВКЛ_КОНВЕЙЕР_2        = ВЫКЛ;
 	 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВКЛ;
   }
   ЕСЛИ (К_ЯЩИК_ПОД_ДАТЧИКОМ && К_ЯЩИК_ЗЕЛЕНЫЙ) {
	 У_УБРАТЬ_ЯЩИК           = ВЫКЛ;
       У_ВКЛ_КОНВЕЙЕР_2        = ВКЛ;
 	 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВКЛ;
   }

   ЗАЦИКЛИТЬ; /* снимем контроль ошибки по отсутствию перехода из */           
 }
}

ПРОЦ ПодачаЯщиков {
ИЗ ПРОЦ Инициализация  
			 К_ЯЩИК_ПОД_ДАТЧИКОМ,
			 У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ;
				                             
 СОСТ Начало{
   ЕСЛИ (!К_ЯЩИК_ПОД_ДАТЧИКОМ) { 
       У_ВКЛ_КОНВЕЙЕР_ОСНОВНОЙ = ВКЛ;       
   } 
   ЗАЦИКЛИТЬ; /* снимем контроль ошибки по отсутствию перехода из */        
 }
}
}



